[{"C:\\Users\\Victor Tilheri\\Desktop\\react-apps\\cryptocurrency-app\\src\\index.js":"1","C:\\Users\\Victor Tilheri\\Desktop\\react-apps\\cryptocurrency-app\\src\\App.js":"2","C:\\Users\\Victor Tilheri\\Desktop\\react-apps\\cryptocurrency-app\\src\\components\\Coin\\Coin.js":"3"},{"size":196,"mtime":1611185641952,"results":"4","hashOfConfig":"5"},{"size":2506,"mtime":1611778950408,"results":"6","hashOfConfig":"5"},{"size":2376,"mtime":1611778994665,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oxh98b",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Victor Tilheri\\Desktop\\react-apps\\cryptocurrency-app\\src\\index.js",[],"C:\\Users\\Victor Tilheri\\Desktop\\react-apps\\cryptocurrency-app\\src\\App.js",["15"],"import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Coin from './components/Coin/Coin.js';\nimport './App.css';\n\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    axios.get(\n      'https://api.coingecko.com/api/v3/coins/markets?vs_currency=brl&order=market_cap_desc&per_page=250&page=1&sparkline=false'\n      ).then(res => {\n        setCoins(res.data);\n        // Ordenar os objetos recebidos\n        // .sort((a, b) => parseFloat(b.total_volume) - parseFloat(a.total_volume))\n      }).catch(error => console.log(error));\n\n  }, []);\n\n  const handleChange = e => {\n    setSearch(e.target.value)\n  }\n\n  const filteredCoins = coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()));\n\n  return (\n    <div className=\"coin-app\">\n      {/* Scroll com símbolos e variações das criptomoedas */}\n      <div className=\"marquee\">\n        <span>\n          {\n            coins.map(coin => {\n              if (coin.symbol !== null && coin.price_change_percentage_24h !== null)\n              return (\n                <b key={coin.id} className={coin.price_change_percentage_24h < 0 ? \"red\" : \"green\"}>\n                    {console.log(coin.name)}\n                    {coin.symbol.toUpperCase() + \" \" + coin.price_change_percentage_24h.toFixed(2) + \"%\"}\n                </b>\n                )\n              })\n            }\n        \n          </span>\n      </div>\n      <div className=\"coins-search\">\n        <input list=\"search-list\" type=\"text\" placeholder=\"Buscar\" className=\"coin-input\" onChange={handleChange}/>\n        \n        {/* Sugestões na barra de pesquisa */}\n\n        {/* <datalist id=\"search-list\">\n          {filteredCoins.map(coin => {\n            if (filteredCoins.indexOf(coin) < 5)\n            return (\n              <option value={coin.name}/>\n            )\n          })}\n        </datalist> */}\n\n        <h1 className=\"coin-text\">Busque uma criptomoeda</h1>\n      </div>\n      {filteredCoins.map(coin => {\n        \n        \n        \n        return (\n          <Coin \n            key={coin.id}\n            coinName={coin.name} \n            coinImage={coin.image}\n            coinSymbol={coin.symbol} \n            coinPrice={coin.current_price}\n            coinVolume={coin.total_volume}\n            coinPriceChange={coin.price_change_percentage_24h}\n            coinMakertcap={coin.market_cap} \n          />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Victor Tilheri\\Desktop\\react-apps\\cryptocurrency-app\\src\\components\\Coin\\Coin.js",[],{"ruleId":"16","severity":1,"message":"17","line":34,"column":28,"nodeType":"18","messageId":"19","endLine":34,"endColumn":30},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]